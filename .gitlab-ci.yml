stages:
  - build
  - test

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build:
  stage: build
  script:
    # - docker build --tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:${CI_COMMIT_TAG:-latest} .
    - docker build --tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest .
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:latest
  except:
    - tags

build-tags:
  stage: build
  script:
    # - docker build --tag $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:${CI_COMMIT_TAG:-latest} .
    - docker build --tag $CI_REGISTRY_IMAGE:CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE:CI_COMMIT_TAG
  only:
    - tags

test:
  stage: test
  before_script:
    - docker-compose down
    - docker-compose up -d
  script:
    - curl http://localhost:3003/ngsi-ld/v1/entities?type=iotc:iot-stream > test.json
    - cat test.json
  after_script:
    - rm test.json
    - docker-compose down
